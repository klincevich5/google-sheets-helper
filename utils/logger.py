# utils/logger.py

from datetime import datetime
from zoneinfo import ZoneInfo
from core.config import TIMEZONE
# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å

def log_separator(log_file):
    """–î–æ–±–∞–≤–∏—Ç—å –¥–ª–∏–Ω–Ω—É—é –ª–∏–Ω–∏—é –¥–ª—è –ª–æ–≥–æ–≤"""
    log_to_file(log_file, "-" * 30)

def log_section(title, log_file):
    """–î–æ–±–∞–≤–∏—Ç—å —Å–µ–∫—Ü–∏—é —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –≤ –ª–æ–≥–∞—Ö"""
    try:
        log_to_file(log_file, "=" * 30)
        log_to_file(log_file, f"üß© {title}")
        log_to_file(log_file, "=" * 30)
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ log_section: {e}")
        raise

def log_to_file(log_file, message):
    try:
        with open(log_file, "a", encoding="utf-8") as f:
            try:
                timezone = ZoneInfo(TIMEZONE)
            except Exception as e:
                raise ValueError(f"–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ TIMEZONE: {TIMEZONE}. –û—à–∏–±–∫–∞: {e}")

            f.write(f"{datetime.now(timezone).strftime('%Y-%m-%d %H:%M:%S')} ‚Äî {message}\n")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ª–æ–≥ {log_file}: {e}")
