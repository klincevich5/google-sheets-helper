# google_service.py

from googleapiclient.discovery import build
from google.auth.transport.requests import Request
from google.oauth2.credentials import Credentials
from config import TOKEN_PATH
from logger import log_info, log_error
from notifier import send_telegram_message

class GoogleSheetsService:
    def __init__(self, log_file: str):
        self.log_file = log_file  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ –ª–æ–≥—É –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
        self.service = self.load_service()

    def load_service(self):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å Google Sheets API —Å–µ—Ä–≤–∏—Å."""
        try:
            creds = Credentials.from_authorized_user_file(TOKEN_PATH)
            if creds.expired and creds.refresh_token:
                creds.refresh(Request())
                log_info(self.log_file, "üîÑ –¢–æ–∫–µ–Ω Google –æ–±–Ω–æ–≤–ª—ë–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")
            service = build("sheets", "v4", credentials=creds)
            log_info(self.log_file, "‚úÖ –°–µ—Ä–≤–∏—Å Google Sheets —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.")
            return service
        except Exception as e:
            log_error(self.log_file, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ä–≤–∏—Å–∞ Google Sheets: {e}")
            send_telegram_message(self.log_file, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Google Sheets API: {e}")
            raise

    def refresh_if_needed(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã."""
        try:
            creds = Credentials.from_authorized_user_file(TOKEN_PATH)
            if creds.expired and creds.refresh_token:
                creds.refresh(Request())
                log_info(self.log_file, "üîÑ –¢–æ–∫–µ–Ω Google —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã.")
        except Exception as e:
            log_error(self.log_file, f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {e}")
            send_telegram_message(self.log_file, f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
