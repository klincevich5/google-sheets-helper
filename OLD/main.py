import threading
from config import SHEETS_LOG_FILE, ROTATIONS_LOG_FILE
from logger import log_to_file
from database import check_db_integrity, list_tracked_documents
from scanner_sheets import SheetsInfo_scanner
from scanner_rotations import RotationsInfo_scanner
import time

def main():
    log_to_file(SHEETS_LOG_FILE, "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...")
    log_to_file(ROTATIONS_LOG_FILE, "üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...")

    try:
        check_db_integrity()
        log_to_file(SHEETS_LOG_FILE, "üì¶ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞.")
        log_to_file(ROTATIONS_LOG_FILE, "üì¶ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞.")
    except Exception as e:
        log_to_file(SHEETS_LOG_FILE, f"‚ùå –û—à–∏–±–∫–∞: {e}")
        log_to_file(ROTATIONS_LOG_FILE, f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return

    docs = list_tracked_documents()
    log_to_file(SHEETS_LOG_FILE, f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(docs)} –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:")
    log_to_file(ROTATIONS_LOG_FILE, f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(docs)} –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:")
    for doc in docs:
        line = f"‚îú‚îÄ {doc[0]} | {doc[1]} | ID: {doc[2]}"
        log_to_file(SHEETS_LOG_FILE, line)
        log_to_file(ROTATIONS_LOG_FILE, line)

    thread1 = threading.Thread(target=SheetsInfo_scanner, daemon=True)
    thread2 = threading.Thread(target=RotationsInfo_scanner, daemon=True)
    thread1.start()
    thread2.start()

    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        log_to_file(SHEETS_LOG_FILE, "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ Ctrl+C")
        log_to_file(ROTATIONS_LOG_FILE, "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ Ctrl+C")

if __name__ == "__main__":
    main()
